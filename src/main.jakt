import sdl { SDL }
import video { draw_frame }
import system { System }
import cpu { CPU }

function main(args: [String]) {
    // mut sdl = SDL::construct()
    // sdl.init_video(width: 600, height: 600)
    // draw_frame(sdl)
    // sdl.quit()

    guard args.size() > 1 else {
        eprintln("usage: jakt_nes <rom file>")
        return 1
    }

    let filename = args[1]

    let system = System::init(filename)

    match system {
        Success(system) => {
            mut ticks = 0
            mut cpu = CPU::init(system)
            cpu.debug()

            mut i = 0
            mut lastpc: u16 = 0
            while (i < 5000) {
                //print("-- TICK: {:2d}\n", ticks++)
                cpu.tick()
                i++
            }
            print("RAM: {:2>02x} {:2>02x} {:2>02x} {:2>02x} {:2>02x} {:2>02x} {:2>02x} {:2>02x}\n",
                system.read_byte(address: 0x0000), system.read_byte(address: 0x0001), system.read_byte(address: 0x0002), system.read_byte(address: 0x0003),
                system.read_byte(address: 0x0004), system.read_byte(address: 0x0005), system.read_byte(address: 0x0006), system.read_byte(address: 0x0007))
        }
        Error(msg) => {
            eprintln("Error: {}", msg)
            return 2
        }
    }

    return 0
}